{"ast":null,"code":"import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@lezer/highlight';\nimport { LRParser } from '@lezer/lr';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Keyword = {\n  __proto__: null,\n  anyref: 34,\n  dataref: 34,\n  eqref: 34,\n  externref: 34,\n  i31ref: 34,\n  funcref: 34,\n  i8: 34,\n  i16: 34,\n  i32: 34,\n  i64: 34,\n  f32: 34,\n  f64: 34\n};\nconst parser = /*@__PURE__*/LRParser.deserialize({\n  version: 14,\n  states: \"!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h\",\n  stateData: \"!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O\",\n  goto: \"xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV\",\n  nodeNames: \"⚠ LineComment BlockComment Module ) ( App Identifier Type Keyword Number String\",\n  maxTerm: 17,\n  nodeProps: [[\"isolate\", -3, 1, 2, 11, \"\"], [\"openedBy\", 4, \"(\"], [\"closedBy\", 5, \")\"], [\"group\", -6, 6, 7, 8, 9, 10, 11, \"Expression\"]],\n  skippedNodes: [0, 1, 2],\n  repeatNodeCount: 1,\n  tokenData: \"0o~R^XY}YZ}]^}pq}rs!Stu#pxy'Uyz(e{|(j}!O(j!Q!R(s!R![*p!]!^.^#T#o.{~!SO_~~!VVOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j<%lO!S~!qOZ~~!tRO;'S!S;'S;=`!};=`O!S~#QWOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j;=`<%l!S<%lO!S~#mP;=`<%l!S~#siqr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~%giV~qr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~'ZPT~!]!^'^~'aTO!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~'sVOy'^yz(Yz!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~(_OQ~~(bP;=`<%l'^~(jOS~~(mQ!Q!R(s!R![*p~(xUY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){#l#m+[~)aRY~!Q![)j!g!h){#X#Y){~)oSY~!Q![)j!g!h){#R#S*j#X#Y){~*OR{|*X}!O*X!Q![*_~*[P!Q![*_~*dQY~!Q![*_#R#S*X~*mP!Q![)j~*uTY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){~+XP!Q![*p~+_R!Q![+h!c!i+h#T#Z+h~+mVY~!O!P,S!Q![+h!c!i+h!r!s-P#R#S+[#T#Z+h#d#e-P~,XTY~!Q![,h!c!i,h!r!s-P#T#Z,h#d#e-P~,mUY~!Q![,h!c!i,h!r!s-P#R#S.Q#T#Z,h#d#e-P~-ST{|-c}!O-c!Q![-o!c!i-o#T#Z-o~-fR!Q![-o!c!i-o#T#Z-o~-tSY~!Q![-o!c!i-o#R#S-c#T#Z-o~.TR!Q![,h!c!i,h#T#Z,h~.aP!]!^.d~.iSP~OY.dZ;'S.d;'S;=`.u<%lO.d~.xP;=`<%l.d~/QiX~qr.{st.{tu.{uv.{vw.{wx.{z{.{{|.{}!O.{!O!P.{!P!Q.{!Q![.{![!].{!^!_.{!_!`.{!`!a.{!a!b.{!b!c.{!c!}.{#Q#R.{#R#S.{#S#T.{#T#o.{#p#q.{#r#s.{\",\n  tokenizers: [0],\n  topRules: {\n    \"Module\": [0, 3]\n  },\n  specialized: [{\n    term: 9,\n    get: value => spec_Keyword[value] || -1\n  }],\n  tokenPrec: 0\n});\nconst wastLanguage = /*@__PURE__*/LRLanguage.define({\n  name: \"wast\",\n  parser: /*@__PURE__*/parser.configure({\n    props: [/*@__PURE__*/indentNodeProp.add({\n      App: /*@__PURE__*/delimitedIndent({\n        closing: \")\",\n        align: false\n      })\n    }), /*@__PURE__*/foldNodeProp.add({\n      App: foldInside,\n      BlockComment(tree) {\n        return {\n          from: tree.from + 2,\n          to: tree.to - 2\n        };\n      }\n    }), /*@__PURE__*/styleTags({\n      Keyword: tags.keyword,\n      Type: tags.typeName,\n      Number: tags.number,\n      String: tags.string,\n      Identifier: tags.variableName,\n      LineComment: tags.lineComment,\n      BlockComment: tags.blockComment,\n      \"( )\": tags.paren\n    })]\n  }),\n  languageData: {\n    commentTokens: {\n      line: \";;\",\n      block: {\n        open: \"(;\",\n        close: \";)\"\n      }\n    },\n    closeBrackets: {\n      brackets: [\"(\", '\"']\n    }\n  }\n});\nfunction wast() {\n  return new LanguageSupport(wastLanguage);\n}\nexport { wast, wastLanguage };","map":{"version":3,"names":["LRLanguage","indentNodeProp","delimitedIndent","foldNodeProp","foldInside","LanguageSupport","styleTags","tags","LRParser","spec_Keyword","__proto__","anyref","dataref","eqref","externref","i31ref","funcref","i8","i16","i32","i64","f32","f64","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","specialized","term","get","value","tokenPrec","wastLanguage","define","name","configure","props","add","App","closing","align","BlockComment","tree","from","to","Keyword","keyword","Type","typeName","Number","number","String","string","Identifier","variableName","LineComment","lineComment","blockComment","paren","languageData","commentTokens","line","block","open","close","closeBrackets","brackets","wast"],"sources":["/Users/EL-CAPITAN-2016/Development/mentor/client/node_modules/@codemirror/lang-wast/dist/index.js"],"sourcesContent":["import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@lezer/highlight';\nimport { LRParser } from '@lezer/lr';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Keyword = {__proto__:null,anyref:34, dataref:34, eqref:34, externref:34, i31ref:34, funcref:34, i8:34, i16:34, i32:34, i64:34, f32:34, f64:34};\nconst parser = /*@__PURE__*/LRParser.deserialize({\n  version: 14,\n  states: \"!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h\",\n  stateData: \"!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O\",\n  goto: \"xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV\",\n  nodeNames: \"⚠ LineComment BlockComment Module ) ( App Identifier Type Keyword Number String\",\n  maxTerm: 17,\n  nodeProps: [\n    [\"isolate\", -3,1,2,11,\"\"],\n    [\"openedBy\", 4,\"(\"],\n    [\"closedBy\", 5,\")\"],\n    [\"group\", -6,6,7,8,9,10,11,\"Expression\"]\n  ],\n  skippedNodes: [0,1,2],\n  repeatNodeCount: 1,\n  tokenData: \"0o~R^XY}YZ}]^}pq}rs!Stu#pxy'Uyz(e{|(j}!O(j!Q!R(s!R![*p!]!^.^#T#o.{~!SO_~~!VVOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j<%lO!S~!qOZ~~!tRO;'S!S;'S;=`!};=`O!S~#QWOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j;=`<%l!S<%lO!S~#mP;=`<%l!S~#siqr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~%giV~qr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~'ZPT~!]!^'^~'aTO!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~'sVOy'^yz(Yz!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~(_OQ~~(bP;=`<%l'^~(jOS~~(mQ!Q!R(s!R![*p~(xUY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){#l#m+[~)aRY~!Q![)j!g!h){#X#Y){~)oSY~!Q![)j!g!h){#R#S*j#X#Y){~*OR{|*X}!O*X!Q![*_~*[P!Q![*_~*dQY~!Q![*_#R#S*X~*mP!Q![)j~*uTY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){~+XP!Q![*p~+_R!Q![+h!c!i+h#T#Z+h~+mVY~!O!P,S!Q![+h!c!i+h!r!s-P#R#S+[#T#Z+h#d#e-P~,XTY~!Q![,h!c!i,h!r!s-P#T#Z,h#d#e-P~,mUY~!Q![,h!c!i,h!r!s-P#R#S.Q#T#Z,h#d#e-P~-ST{|-c}!O-c!Q![-o!c!i-o#T#Z-o~-fR!Q![-o!c!i-o#T#Z-o~-tSY~!Q![-o!c!i-o#R#S-c#T#Z-o~.TR!Q![,h!c!i,h#T#Z,h~.aP!]!^.d~.iSP~OY.dZ;'S.d;'S;=`.u<%lO.d~.xP;=`<%l.d~/QiX~qr.{st.{tu.{uv.{vw.{wx.{z{.{{|.{}!O.{!O!P.{!P!Q.{!Q![.{![!].{!^!_.{!_!`.{!`!a.{!a!b.{!b!c.{!c!}.{#Q#R.{#R#S.{#S#T.{#T#o.{#p#q.{#r#s.{\",\n  tokenizers: [0],\n  topRules: {\"Module\":[0,3]},\n  specialized: [{term: 9, get: (value) => spec_Keyword[value] || -1}],\n  tokenPrec: 0\n});\n\nconst wastLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"wast\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                App: /*@__PURE__*/delimitedIndent({ closing: \")\", align: false })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                App: foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            /*@__PURE__*/styleTags({\n                Keyword: tags.keyword,\n                Type: tags.typeName,\n                Number: tags.number,\n                String: tags.string,\n                Identifier: tags.variableName,\n                LineComment: tags.lineComment,\n                BlockComment: tags.blockComment,\n                \"( )\": tags.paren\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \";;\", block: { open: \"(;\", close: \";)\" } },\n        closeBrackets: { brackets: [\"(\", '\"'] }\n    }\n});\nfunction wast() {\n    return new LanguageSupport(wastLanguage);\n}\n\nexport { wast, wastLanguage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}