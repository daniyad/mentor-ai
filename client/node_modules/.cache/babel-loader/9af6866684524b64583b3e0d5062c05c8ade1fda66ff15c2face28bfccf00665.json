{"ast":null,"code":"var keywords = {\n  \"break\": true,\n  \"case\": true,\n  \"chan\": true,\n  \"const\": true,\n  \"continue\": true,\n  \"default\": true,\n  \"defer\": true,\n  \"else\": true,\n  \"fallthrough\": true,\n  \"for\": true,\n  \"func\": true,\n  \"go\": true,\n  \"goto\": true,\n  \"if\": true,\n  \"import\": true,\n  \"interface\": true,\n  \"map\": true,\n  \"package\": true,\n  \"range\": true,\n  \"return\": true,\n  \"select\": true,\n  \"struct\": true,\n  \"switch\": true,\n  \"type\": true,\n  \"var\": true,\n  \"bool\": true,\n  \"byte\": true,\n  \"complex64\": true,\n  \"complex128\": true,\n  \"float32\": true,\n  \"float64\": true,\n  \"int8\": true,\n  \"int16\": true,\n  \"int32\": true,\n  \"int64\": true,\n  \"string\": true,\n  \"uint8\": true,\n  \"uint16\": true,\n  \"uint32\": true,\n  \"uint64\": true,\n  \"int\": true,\n  \"uint\": true,\n  \"uintptr\": true,\n  \"error\": true,\n  \"rune\": true,\n  \"any\": true,\n  \"comparable\": true\n};\nvar atoms = {\n  \"true\": true,\n  \"false\": true,\n  \"iota\": true,\n  \"nil\": true,\n  \"append\": true,\n  \"cap\": true,\n  \"close\": true,\n  \"complex\": true,\n  \"copy\": true,\n  \"delete\": true,\n  \"imag\": true,\n  \"len\": true,\n  \"make\": true,\n  \"new\": true,\n  \"panic\": true,\n  \"print\": true,\n  \"println\": true,\n  \"real\": true,\n  \"recover\": true\n};\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\nvar curPunc;\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false,\n      next,\n      end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n    }\n    if (end || !(escaped || quote == \"`\")) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\nfunction tokenComment(stream, state) {\n  var maybeEnd = false,\n    ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = ch == \"*\";\n  }\n  return \"comment\";\n}\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const go = {\n  name: \"go\",\n  startState: function (indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n  token: function (stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      if (ctx.type == \"case\") ctx.type = \"}\";\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n    if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"case\") ctx.type = \"case\";else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);else if (curPunc == ctx.type) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context,\n      firstChar = textAfter && textAfter.charAt(0);\n    if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) return ctx.indented;\n    var closing = firstChar == ctx.type;\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n  languageData: {\n    indentOnInput: /^\\s([{}]|case |default\\s*:)$/,\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    }\n  }\n};","map":{"version":3,"names":["keywords","atoms","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","go","name","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","charAt","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close"],"sources":["/Users/EL-CAPITAN-2016/Development/mentor/client/node_modules/@codemirror/legacy-modes/mode/go.js"],"sourcesContent":["var keywords = {\n  \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n  \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n  \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n  \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n  \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n  \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n  \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n  \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n  \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n  \"rune\":true, \"any\":true, \"comparable\":true\n};\n\nvar atoms = {\n  \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n  \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n  \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n  \"println\":true, \"real\":true, \"recover\":true\n};\n\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n    }\n    if (end || !(escaped || quote == \"`\"))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const go = {\n  name: \"go\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      if (ctx.type == \"case\") ctx.type = \"}\";\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"case\") ctx.type = \"case\";\n    else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n    else if (curPunc == ctx.type) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n    if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) return ctx.indented;\n    var closing = firstChar == ctx.type;\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s([{}]|case |default\\s*:)$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}